import { join } from "path";
import { promisifyAll } from "bluebird";
const fs = promisifyAll(require("fs"));
import * as inquirer from "inquirer";
import { readdirSync } from "fs";

function leftpad(zeroes, num) {
  return (String(zeroes) + String(num)).substring(String(num).length);
}

const moduleFiles = readdirSync(join(process.cwd(), "modules"));
const sortedFiles = moduleFiles
  .sort()
  .filter(filename => filename.includes(".json"));
const digits = Math.ceil(Math.log10(sortedFiles.length));
const zeroes = new Array(digits).fill("0").join("");

console.log("New file names:");
const moduleStrings = sortedFiles.map((filename, i) => {
  console.log(`${i}: ${filename} -> ${leftpad(zeroes, i)}.json`);
  return fs.readFileSync(join(process.cwd(), "modules", filename), "utf8");
});

inquirer
  .prompt([
    {
      type: "confirm",
      name: "confirmed",
      message: "Confirm new file names:",
      default: false
    }
  ])
  .then((answer:any) => {
    if (answer.confirmed) {
      sortedFiles.map(filename =>
        fs.unlinkSync(join(process.cwd(), "modules", filename))
      );
      moduleStrings.map((s, i) => {
        return fs.writeFileSync(
          join(process.cwd(), "modules", `${leftpad(zeroes, i)}.json`),
          s,
          "utf8"
        );
      });
    }
  });
