import echo from "packs-framework/lib/echo";
import { resolve } from "path";
import { JSDOM } from "jsdom";

// mock browser
const { window } = new JSDOM();
const globalAny: any = global;
globalAny.document = window.document;

const components = require(resolve(process.cwd(), "./public/components"));
const modules = require(resolve(process.cwd(), "./.packs/modules"));
const initialState = require(resolve(process.cwd(), "./.packs/initialState"));

console.log("Initial state:", JSON.stringify(initialState, null, 2));

function assignProps(params, state) {
  for (let k in params) {
    params[k] = echo(params[k], state);
  }
  return params;
}

const simulated = modules.reduce((data, m, i) => {
  const component = components[m.component];
  component.defaultProps = component.defaultProps || {};
  const props = {
    ...assignProps(component.defaultProps, data),
    ...assignProps(m, data)
  };
  const simulated =
    component.hasOwnProperty("simulate") && component.simulate(props);
  const response = !simulated ? {} : simulated;
  response[`module_${i}_component`] = m.componentName;
  response[`module_${i}_t`] = Date.now();
  console.log(`Module ${i}:`, JSON.stringify(response, null, 2));
  return Object.assign(data, response);
}, initialState);

console.log(
  "Final simulated response state:",
  JSON.stringify(simulated, null, 2)
);
